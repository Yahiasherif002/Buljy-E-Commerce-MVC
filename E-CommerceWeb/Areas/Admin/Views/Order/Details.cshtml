@using Buljy.Utility
@model OrderVM
@{
    ViewData["Title"] = $"Order #{Model.OrderHeader.Id}";
    var orderDate = Model.OrderHeader.OrderDate?.ToString("MMMM dd, yyyy");
    var estimatedDelivery = Model.OrderHeader.OrderDate?.AddDays(3).ToString("MMMM dd, yyyy");
}

@{
    var shippingDate = Model.OrderHeader.ShippingDate;
    var isProcessing = Model.OrderHeader.OrderStatus == SD.StatusInProcess;
    var isShipped = Model.OrderHeader.OrderStatus == SD.StatusShipped;
    var isCancelled = Model.OrderHeader.OrderStatus == SD.StatusCancelled;
}

<div class="container py-5">
    <!-- Back Button -->
    <div class="mb-4">
        <a asp-area="Admin" asp-controller="Order" asp-action="Index" class="btn btn-outline-primary">
            <i class="bi bi-arrow-left me-2"></i>Back to Orders
        </a>
    </div>

    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-area="Customer" asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Order" asp-action="Index">Orders</a></li>
            <li class="breadcrumb-item active">Order #@Model.OrderHeader.Id</li>
        </ol>
    </nav>

    <div class="row g-4">
        <!-- Order Details -->
        <div class="col-lg-8">
            <!-- Order Control Buttons -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body p-4">
                    <h3 class="h5 mb-4">Order Controls</h3>
                    <div class="d-flex flex-wrap gap-3">

                        @if (User.IsInRole(SD.CompanyRole) && Model.OrderHeader.PaymentStatus == SD.PaymentStatusDelayedPayment)
                        {
                            @if (Model.OrderHeader.OrderStatus == SD.StatusShipped)
                            {
                                <form asp-action="PayNow" asp-controller="Order" method="post" class="d-inline">
                                    <input type="hidden" asp-for="@Model.OrderHeader.Id" />
                                    <button type="submit" class="btn btn-primary">
                                        <i class="bi bi-credit-card me-2"></i>
                                        Pay Now
                                    </button>
                                </form>
                            }
                        }

                        @if (User.IsInRole(SD.AdminRole)||User.IsInRole(SD.EmployeeRole) )
                        {
                            @if (Model.OrderHeader.OrderStatus == SD.StatusApproved)
                            {
                                <form asp-action="StartProcessing" asp-controller="Order" method="post" class="d-inline">
                                    <input asp-for="@Model.OrderHeader.Id" hidden />
                                    <button type="submit" class="btn btn-info text-white">
                                        <i class="bi bi-box-seam me-2"></i>
                                        Start Processing
                                    </button>
                                </form>
                            }

                              @if (Model.OrderHeader.OrderStatus != SD.StatusShipped && Model.OrderHeader.OrderStatus == SD.StatusInProcess)
                              {
                                    <form id="shipOrderForm" asp-action="ShipOrder" asp-controller="Order" method="post" class="d-inline">
                                        <input type="hidden" asp-for="@Model.OrderHeader.Id" />
                                        <button type="button" class="btn btn-success" onclick="validateShipOrder(@Model.OrderHeader.Id)">
                                            <i class="bi bi-truck me-2"></i>
                                            Ship Order
                                        </button>
                                    </form>
                              }


                            @if (Model.OrderHeader.OrderStatus != SD.StatusCancelled &&
                           Model.OrderHeader.OrderStatus != SD.StatusShipped &&
                           Model.OrderHeader.OrderStatus != SD.StatusRefunded)
                            {
                                <form id="cancelOrderForm" asp-action="CancelOrder" asp-controller="Order" method="post" class="d-inline">
                                    <input type="hidden" asp-for="@Model.OrderHeader.Id" />
                                    <button type="button" class="btn btn-danger" onclick="confirmCancelOrder(@Model.OrderHeader.Id)">
                                        <i class="bi bi-x-circle me-2"></i>Cancel Order
                                    </button>
                                </form>
                            }


                            <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#updateOrderModal">
                                <i class="bi bi-pencil-square me-2"></i>Update Details
                            </button>

                        }

                    </div>
                </div>
            </div>

            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h2 class="h4 mb-0">Order Details</h2>
                        <span class="badge rounded-pill @(Model.OrderHeader.OrderStatus == SD.StatusApproved ? "bg-success" : "bg-warning")">
                            @Model.OrderHeader.OrderStatus
                        </span>
                    </div>

                    <!-- Order Timeline -->
                    <div class="order-timeline mb-4">
                        <!-- Order Placed -->
                        <div class="timeline-item @(orderDate != null ? "completed" : "")">
                            <div class="timeline-icon">
                                <i class="bi bi-cart-check"></i>
                            </div>
                            <div class="timeline-content">
                                <h6 class="mb-0">Order Placed</h6>
                                <p class="text-muted mb-0">@(orderDate ?? "Pending")</p>
                            </div>
                        </div>

                        <!-- Processing -->
                        <div class="timeline-item @(isProcessing || isShipped  ? "completed" : "")">
                            <div class="timeline-icon">
                                <i class="bi bi-box-seam"></i>
                            </div>
                            <div class="timeline-content">
                                <h6 class="mb-0">Processing</h6>
                                <p class="text-muted mb-0">
                                    @if (isProcessing)
                                    {
                                        <span class="badge bg-info">In Progress</span>
                                    }
                                    else
                                    {
                                        <span>Pending</span>
                                    }
                                </p>
                            </div>
                        </div>

                        <!-- Shipped -->
                        <div class="timeline-item @(isShipped  ? "completed" : "")">
                            <div class="timeline-icon">
                                <i class="bi bi-truck"></i>
                            </div>
                            <div class="timeline-content">
                                <h6 class="mb-0">Shipped</h6>
                                <p class="text-muted mb-0">
                                    @if (shippingDate.HasValue)
                                    {
                                        @shippingDate.Value.ToString("MMM dd, yyyy")
                                    }
                                    else if (isShipped)
                                    {
                                        <span class="badge bg-primary">In Transit</span>
                                    }
                                    else
                                    {
                                        <span>Pending</span>
                                    }
                                </p>
                                @if (!string.IsNullOrEmpty(Model.OrderHeader.TrackingNumber))
                                {
                                    <small class="text-muted">
                                        Tracking: @Model.OrderHeader.TrackingNumber
                                    </small>
                                }
                            </div>
                        </div>

                        <!-- Delivered -->
                                            @*  <div class="timeline-item @(isDelivered ? "completed" : "")">
                            <div class="timeline-icon">
                                <i class="bi bi-check-circle"></i>
                            </div>
                            <div class="timeline-content">
                                <h6 class="mb-0">Delivered</h6>
                                <p class="text-muted mb-0">
                                    @if (isDelivered)
                                    {
                                        @estimatedDelivery?.ToString("MMM dd, yyyy")
                                    }
                                    else if (!isCancelled)
                                    {
                                        <span>Expected by @estimatedDelivery?.ToString("MMM dd, yyyy")</span>
                                    }
                                    else
                                    {
                                        <span>Cancelled</span>
                                    }
                                </p>
                            </div>
                        </div> *@
                    </div>

                   @*  <div class="order-timeline mb-4">
                        <div class="d-flex align-items-center mb-3">
                            <div class="timeline-icon bg-primary text-white rounded-circle p-2">
                                <i class="bi bi-check-circle-fill"></i>
                            </div>
                            <div class="ms-3">
                                <p class="mb-0 small text-muted">Order Placed</p>
                                <p class="mb-0 fw-medium">@orderDate</p>
                            </div>
                        </div>
                        <div class="d-flex align-items-center">
                            <div class="timeline-icon bg-light text-primary rounded-circle p-2">
                                <i class="bi bi-truck"></i>
                            </div>
                            <div class="ms-3">
                                <p class="mb-0 small text-muted">Estimated Delivery</p>
                                <p class="mb-0 fw-medium">@estimatedDelivery</p>
                            </div>
                        </div>
                    </div>
 *@
                    <!-- Order Items -->
                    <h3 class="h5 mb-3">Items in Your Order</h3>
                    @foreach (var item in Model.OrderDetails)
                    {
                        <div class="d-flex align-items-center mb-3 p-3 bg-light rounded">
                            <img src="@(string.IsNullOrEmpty(item.product.ImageUrl) ? "/images/no-image.png" : item.product.ImageUrl)"
                                 alt="@item.product.Title"
                                 class="rounded"
                                 style="width: 80px; height: 80px; object-fit: cover;">
                            <div class="ms-3 flex-grow-1">
                                <h6 class="mb-1">@item.product.Title</h6>
                                <p class="mb-0 text-muted small">@item.product.Author</p>
                                <p class="mb-0 small">Quantity: @item.Count</p>
                            </div>
                            <div class="ms-3 text-end">
                                <span class="fw-bold">@((item.Price * item.Count).ToString("c"))</span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Order Summary -->
        <div class="col-lg-4">
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body p-4">
                    <h3 class="h5 mb-4">Order Summary</h3>

                    <div class="d-flex justify-content-between mb-2">
                        <span class="text-muted">Subtotal</span>
                        <span>@Model.OrderHeader.OrderTotal?.ToString("c")</span>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span class="text-muted">Shipping</span>
                        <span class="text-success">Free</span>
                    </div>
                    <hr class="my-3">
                    <div class="d-flex justify-content-between">
                        <span class="fw-bold">Total</span>
                        <span class="fw-bold fs-5">@Model.OrderHeader.OrderTotal?.ToString("c")</span>
                    </div>
                </div>
            </div>

            <!-- Shipping Information -->
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <h3 class="h5 mb-4">Shipping Information</h3>
                    <div class="mb-3">
                        <p class="mb-1 fw-medium">@Model.OrderHeader.Name</p>
                        <p class="mb-1 text-muted">@Model.OrderHeader.StreetAddress</p>
                        <p class="mb-1 text-muted">@Model.OrderHeader.City, @Model.OrderHeader.State @Model.OrderHeader.PostalCode</p>
                        <p class="mb-0 text-muted">@Model.OrderHeader.Phone</p>
                    </div>

                    <div class="payment-status mt-4">
                        <h3 class="h5 mb-3">Payment Status</h3>
                        <span class="badge rounded-pill @(Model.OrderHeader.PaymentStatus == SD.PaymentStatusApproved ? "bg-success" : "bg-warning")">
                            @Model.OrderHeader.PaymentStatus
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Update Order Modal -->
<div class="modal fade" id="updateOrderModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form asp-action="UpdateOrder" asp-controller="Order" method="post" novalidate>
                <div class="modal-body">
                    <!-- Corrected with asp-for to bind the field -->
                    <input asp-for="OrderHeader.Id" type="hidden" />
                    <div class="mb-3">
                        <label asp-for="@Model.OrderHeader.Name" class="form-label"></label>
                        <input asp-for="@Model.OrderHeader.Name" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label asp-for="@Model.OrderHeader.Phone" class="form-label"></label>
                        <input asp-for="@Model.OrderHeader.Phone" class="form-control" type="tel" required />
                    </div>
                    <div class="mb-3">
                        <label asp-for="@Model.OrderHeader.StreetAddress" class="form-label"></label>
                        <input asp-for="@Model.OrderHeader.StreetAddress" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label asp-for="@Model.OrderHeader.City" class="form-label"></label>
                        <input asp-for="@Model.OrderHeader.City" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label asp-for="@Model.OrderHeader.State" class="form-label"></label>
                        <input asp-for="@Model.OrderHeader.State" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label asp-for="@Model.OrderHeader.PostalCode" class="form-label"></label>
                        <input asp-for="@Model.OrderHeader.PostalCode" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label asp-for="@Model.OrderHeader.Carrier" class="form-label"></label>
                        <input asp-for="@Model.OrderHeader.Carrier" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label asp-for="@Model.OrderHeader.TrackingNumber" class="form-label"></label>
                        <input asp-for="@Model.OrderHeader.TrackingNumber" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Details</button>
                </div>
            </form>
        </div>
    </div>
</div>


@section Styles {
    <link rel="stylesheet" href="~/css/order-timeline.css" />
    <style>
        
        .timeline-icon {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .order-timeline {
            position: relative;
        }

            .order-timeline::before {
                content: '';
                position: absolute;
                left: 20px;
                top: 40px;
                bottom: 0;
                width: 1px;
                background-color: #dee2e6;
            }

        .badge {
            padding: 0.5rem 1rem;
            font-weight: 500;
        }

        .card {
            transition: transform 0.2s ease;
        }

            .card:hover {
                transform: translateY(-2px);
            }

        /* Back Button Styles */
        .btn-outline-primary {
            transition: all 0.2s ease;
            border-width: 2px;
        }

            .btn-outline-primary:hover {
                transform: translateX(-4px);
            }

        /* Order Control Buttons */
        .btn {
            padding: 0.5rem 1rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            transition: all 0.2s ease;
        }

            .btn:hover {
                transform: translateY(-2px);
            }

            .btn i {
                font-size: 1.1em;
            }

        /* Modal Styles */
        .modal-content {
            border: none;
            border-radius: 1rem;
        }

        .modal-header {
            border-bottom: 1px solid var(--bs-border-color);
            padding: 1.5rem;
        }

        .modal-body {
            padding: 1.5rem;
        }

        .modal-footer {
            border-top: 1px solid var(--bs-border-color);
            padding: 1.5rem;
        }

        /* Dark mode styles */
        [data-bs-theme="dark"] {
            --bs-body-bg: #121212;
            --bs-body-color: #e0e0e0;
            --bs-card-bg: #1e1e1e;
            --bs-card-border-color: #2d2d2d;
            --bs-modal-bg: #1e1e1e;
        }

            [data-bs-theme="dark"] .bg-light {
                background-color: #2d2d2d !important;
            }

            [data-bs-theme="dark"] .text-muted {
                color: #a0a0a0 !important;
            }

            [data-bs-theme="dark"] hr {
                border-color: #404040;
            }

            [data-bs-theme="dark"] .timeline-icon.bg-light {
                background-color: #2d2d2d !important;
            }

            [data-bs-theme="dark"] .btn-outline-primary {
                color: var(--bs-primary);
                border-color: var(--bs-primary);
            }

                [data-bs-theme="dark"] .btn-outline-primary:hover {
                    background-color: var(--bs-primary);
                    color: #ffffff;
                }

            [data-bs-theme="dark"] .modal-content {
                background-color: var(--bs-modal-bg);
            }

            [data-bs-theme="dark"] .form-control {
                background-color: #2d2d2d;
                border-color: #404040;
                color: #e0e0e0;
            }

                [data-bs-theme="dark"] .form-control:focus {
                    background-color: #2d2d2d;
                    border-color: var(--bs-primary);
                    color: #e0e0e0;
                }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/js/order-details.js"></script>
}