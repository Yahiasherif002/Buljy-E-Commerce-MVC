@model IPagedList<Company>
@{
    ViewData["Title"] = "Companies";
}

<div class="container-fluid px-4 py-5">
    <!-- Stats Cards Row -->
    <div class="row g-4 mb-5">
        <div class="col-12 col-md-6 col-xl-3">
            <div class="stats-card h-100">
                <div class="d-flex align-items-center">
                    <div class="stats-icon">
                        <i class="bi bi-building fs-4"></i>
                    </div>
                    <div class="ms-3">
                        <p class="stats-label">Total Companies</p>
                        <h3 class="stats-value">@Model.Count()</h3>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-6 col-xl-3">
            <div class="stats-card stats-card-secondary h-100">
                <div class="d-flex align-items-center">
                    <div class="stats-icon">
                        <i class="bi bi-geo-alt fs-4"></i>
                    </div>
                    <div class="ms-3">
                        <p class="stats-label">Active Locations</p>
                        <h3 class="stats-value">@Model.Select(c => c.City).Distinct().Count()</h3>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
   @*  <div class="search-filter-section mb-4">
        <form method="get" class="row g-3 align-items-end">
            <div class="col-12 col-md-4">
                <div class="search-box">
                    <i class="bi bi-search search-icon"></i>
                    <input type="text" name="searchTerm" class="form-control search-input"
                           placeholder="Search companies..." value="@ViewBag.CurrentSearch">
                </div>
            </div>
            <div class="col-12 col-md-3">
                <select name="location" class="form-select">
                    <option value="">All Locations</option>
                    @foreach (var location in Model.Select(c => c.City).Distinct())
                    {
                        <option value="@location" selected="@(ViewBag.CurrentLocation == location)">@location</option>
                    }
                </select>
            </div>
            <div class="col-12 col-md-2">
                <button type="submit" class="btn btn-primary w-100">
                    <i class="bi bi-funnel me-2"></i>Apply Filters
                </button>
            </div>
            @if (!string.IsNullOrEmpty(ViewBag.CurrentSearch) || !string.IsNullOrEmpty(ViewBag.CurrentLocation))
            {
                <div class="col-12 col-md-2">
                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary w-100">
                        <i class="bi bi-x-lg me-2"></i>Clear Filters
                    </a>
                </div>
            }
        </form>
    </div> *@

    <!-- Main Content Table -->
    <div class="modern-table">
        <div class="table-header">
            <div class="d-flex justify-content-between align-items-center p-4 border-bottom">
                <div>
                    <h5 class="mb-1">Company Management</h5>
                    <p class="text-muted small mb-0">Manage your business network</p>
                </div>
                <a asp-action="Upsert" class="btn btn-primary">
                    <i class="bi bi-plus-lg me-2"></i>Add Company
                </a>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover align-middle mb-0">
                <thead>
                    <tr>
                        <th class="px-4">Company</th>
                        <th>Contact</th>
                        <th>Location</th>
                        <th class="text-center px-4">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var company in Model)
                    {
                        <tr>
                            <td class="px-4">
                                <div class="d-flex align-items-center company-info">
                                    <div class="company-avatar">
                                        @company.Name.Substring(0, 1)
                                    </div>
                                    <div class="ms-3">
                                        <h6 class="company-name mb-1">@company.Name</h6>
                                        <span class="company-id">ID: @company.Id</span>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="contact-info">
                                    <div class="contact-phone">
                                        <i class="bi bi-telephone me-2"></i>@company.Phone
                                    </div>
                                    <div class="contact-email">
                                        <i class="bi bi-envelope me-2"></i>@company.Email
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="location-info">
                                    <div class="location-badge">
                                        <i class="bi bi-geo-alt me-1"></i>
                                        @company.City, @company.Country
                                    </div>
                                    <div class="postal-code">
                                        <i class="bi bi-mailbox me-2"></i>@company.PostalCode
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="action-buttons text-center">

                                    <a asp-action="Details" asp-route-id="@company.Id"
                                       class="btn btn-icon btn-light" title="Details">
                                        <i class="bi bi-eye"></i>
                                    </a>

                                    <a asp-action="Upsert" asp-route-id="@company.Id"
                                       class="btn btn-icon btn-light" title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@company.Id"
                                       class="btn btn-icon btn-danger" title="Delete">
                                        <i class="bi bi-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @if (Model.PageCount > 1)
        {
            <div class="pagination-wrapper">
                <div class="d-flex align-items-center justify-content-between p-4 border-top">
                    <div class="pagination-info">
                        Showing @((Model.PageNumber - 1) * ViewBag.PageSize + 1) to
                        @(Math.Min(Model.PageNumber * ViewBag.PageSize, Model.TotalItemCount))
                        of @Model.TotalItemCount entries
                    </div>
                    <nav aria-label="Page navigation">
                        <ul class="pagination mb-0">
                            <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">
                                    <i class="bi bi-chevron-left"></i>
                                </a>
                            </li>
                            @for (var i = 1; i <= Model.PageCount; i++)
                            {
                                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                </li>
                            }
                            <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">
                                    <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        }
    </div>
</div>

<style>
    :root {
        --primary-color: #4f46e5;
        --secondary-color: #6366f1;
        --accent-1: #3b82f6;
        --accent-2: #2563eb;
        --success-color: #10b981;
        --danger-color: #ef4444;
        --text-primary: #111827;
        --text-secondary: #4b5563;
        --text-muted: #6b7280;
        --border-color: #e5e7eb;
        --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    /* Stats Cards */
    .stats-card {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 1.5rem;
        border-radius: 1rem;
        box-shadow: var(--card-shadow);
        transition: transform 0.2s;
    }

        .stats-card:hover {
            transform: translateY(-2px);
        }

    .stats-card-secondary {
        background: linear-gradient(135deg, var(--accent-1), var(--accent-2));
    }

    .stats-icon {
        width: 48px;
        height: 48px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .stats-label {
        font-size: 0.875rem;
        margin-bottom: 0.25rem;
        opacity: 0.9;
    }

    .stats-value {
        font-size: 1.75rem;
        font-weight: 600;
        margin: 0;
    }

    /* Search and Filter Section */
    .search-filter-section {
        background: white;
        padding: 1.5rem;
        border-radius: 1rem;
        box-shadow: var(--card-shadow);
    }

    .search-box {
        position: relative;
    }

    .search-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-muted);
    }

    .search-input {
        padding-left: 2.5rem;
        border-radius: 0.5rem;
    }

    /* Table Styles */
    .modern-table {
        background: white;
        border-radius: 1rem;
        box-shadow: var(--card-shadow);
        margin-top: 1.5rem;
    }

    .company-info {
        max-width: 300px;
    }

    .company-avatar {
        width: 40px;
        height: 40px;
        background: var(--primary-color);
        color: white;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 1.25rem;
    }

    .company-name {
        color: var(--text-primary);
        font-weight: 600;
        margin: 0;
    }

    .company-id {
        font-size: 0.75rem;
        color: var(--text-muted);
    }

    .contact-info, .location-info {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .contact-phone, .contact-email {
        display: flex;
        align-items: center;
        color: var(--text-secondary);
        font-size: 0.875rem;
    }

    .location-badge {
        display: inline-flex;
        align-items: center;
        background: var(--primary-color);
        color: white;
        font-size: 0.875rem;
        padding: 0.375rem 0.75rem;
        border-radius: 9999px;
    }

    .postal-code {
        color: var(--text-muted);
        font-size: 0.875rem;
        display: flex;
        align-items: center;
    }

    /* Action Buttons */
    .btn-icon {
        width: 36px;
        height: 36px;
        padding: 0;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: 8px;
        margin-left: 0.5rem;
        transition: all 0.2s;
    }

        .btn-icon:hover {
            transform: translateY(-2px);
        }

    .btn-danger {
        background-color: var(--danger-color);
        border-color: var(--danger-color);
        color: white;
    }

    /* Table Header and Cells */
    .table > thead > tr > th {
        background-color: #f9fafb;
        border-bottom: 2px solid var(--border-color);
        color: var(--text-secondary);
        font-weight: 600;
        padding: 1rem;
    }

    .table > tbody > tr {
        transition: background-color 0.2s;
    }

        .table > tbody > tr:hover {
            background-color: #f9fafb;
        }

    /* Pagination */
    .pagination-wrapper {
        background-color: #f9fafb;
    }

    .pagination-info {
        color: var(--text-muted);
        font-size: 0.875rem;
    }

    .page-link {
        border-radius: 0.5rem;
        margin: 0 0.125rem;
        padding: 0.5rem 0.75rem;
        color: var(--text-primary);
        border: none;
    }

    .page-item.active .page-link {
        background-color: var(--primary-color);
    }

    .page-item.disabled .page-link {
        background-color: #f3f4f6;
        color: var(--text-muted);
    }
</style>

