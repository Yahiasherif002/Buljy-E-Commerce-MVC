@model Company
@{
    ViewData["Title"] = "Company Details";
}

<div class="page-container">
    <div class="details-container">
        <div class="details-header">
            <div class="header-content">
                <div class="company-badge">
                    <i class="bi bi-building"></i>
                </div>
                <div class="company-info">
                    <h1 class="company-name">@Model.Name</h1>
                    <div class="company-meta">
                        <span class="meta-item">
                            <i class="bi bi-hash"></i>
                            ID: @Model.Id
                        </span>
                        @if (!string.IsNullOrEmpty(Model.Country))
                        {
                            <span class="meta-item">
                                <i class="bi bi-globe"></i>
                                @Model.Country
                            </span>
                        }
                    </div>
                </div>
            </div>
            <div class="header-actions">
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn-primary">
                    <i class="bi bi-pencil"></i>
                    Edit Company
                </a>
                <a asp-action="Delete" asp-route-id="@Model.Id" class="btn-danger">
                    <i class="bi bi-trash"></i>
                    Delete
                </a>
                <a asp-action="Index" class="btn-secondary">
                    <i class="bi bi-arrow-left"></i>
                    Back to List
                </a>
            </div>
        </div>

        <div class="details-grid">
            <div class="details-card">
                <div class="card-header">
                    <i class="bi bi-person-lines-fill"></i>
                    <h2>Contact Information</h2>
                </div>
                <div class="card-content">
                    <div class="info-group">
                        <label>Email Address</label>
                        @if (!string.IsNullOrEmpty(Model.Email))
                        {
                            <a href="mailto:@Model.Email" class="contact-link">
                                <i class="bi bi-envelope"></i>
                                @Model.Email
                            </a>
                        }
                        else
                        {
                            <span class="not-provided">Not provided</span>
                        }
                    </div>
                    <div class="info-group">
                        <label>Phone Number</label>
                        @if (!string.IsNullOrEmpty(Model.Phone))
                        {
                            <a href="tel:@Model.Phone" class="contact-link">
                                <i class="bi bi-telephone"></i>
                                @Model.Phone
                            </a>
                        }
                        else
                        {
                            <span class="not-provided">Not provided</span>
                        }
                    </div>
                </div>
            </div>

            <div class="details-card">
                <div class="card-header">
                    <i class="bi bi-geo-alt"></i>
                    <h2>Location Details</h2>
                </div>
                <div class="card-content">
                    <div class="address-grid">
                        <div class="info-group">
                            <label>Street Address</label>
                            <span>@(Model.Address ?? "Not provided")</span>
                        </div>
                        <div class="info-group">
                            <label>City</label>
                            <span>@(Model.City ?? "Not provided")</span>
                        </div>
                        <div class="info-group">
                            <label>Country</label>
                            <span>@(Model.Country ?? "Not provided")</span>
                        </div>
                        <div class="info-group">
                            <label>Postal Code</label>
                            <span>@(Model.PostalCode ?? "Not provided")</span>
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.Address))
                    {
                        <a href="https://www.google.com/maps/search/?api=1&query=@Uri.EscapeDataString($"{Model.Address}, {Model.City}, {Model.Country}")"
                           target="_blank" class="map-link">
                            <i class="bi bi-map"></i>
                            View on Google Maps
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    :root {
        /* Light mode variables */
        --header-gradient-from: #4f46e5;
        --header-gradient-to: #6366f1;
        --bg-primary: #ffffff;
        --bg-secondary: #f8fafc;
        --text-primary: #1e293b;
        --text-secondary: #64748b;
        --border-color: #e2e8f0;
        --input-focus: #4f46e5;
        --shadow-color: rgba(0, 0, 0, 0.1);
        --btn-primary-bg: #ffffff;
        --btn-primary-text: var(--header-gradient-from);
        --btn-secondary-bg: rgba(255, 255, 255, 0.1);
        --btn-secondary-text: #ffffff;
        --btn-danger-bg: #dc2626;
        --btn-danger-hover: #b91c1c;
        --company-badge-bg: rgba(255, 255, 255, 0.2);
    }

    html[data-theme="dark"] {
        --bg-primary: #1a1b1e;
        --bg-secondary: #141517;
        --text-primary: #e5e7eb;
        --text-secondary: #9ca3af;
        --border-color: #2d2e32;
        --input-focus: #6366f1;
        --shadow-color: rgba(0, 0, 0, 0.3);
        --btn-primary-bg: #4f46e5;
        --btn-primary-text: #ffffff;
        --btn-secondary-bg: rgba(255, 255, 255, 0.05);
        --btn-secondary-text: #ffffff;
        --company-badge-bg: rgba(255, 255, 255, 0.1);
    }

    /* Button Styles */
    .btn-primary, .btn-secondary, .btn-danger {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.2s;
    }

    .btn-primary {
        background: var(--btn-primary-bg);
        color: var(--btn-primary-text);
        border: none;
    }

        .btn-primary:hover {
            background: var(--btn-primary-bg);
            opacity: 0.9;
            transform: translateY(-1px);
        }

    .btn-secondary {
        background: var(--btn-secondary-bg);
        color: var(--btn-secondary-text) !important;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

        .btn-secondary:hover {
            background: var(--btn-secondary-bg);
            opacity: 0.8;
        }

    .btn-danger {
        background: var(--btn-danger-bg);
        color: white !important;
        border: none;
    }

        .btn-danger:hover {
            background: var(--btn-danger-hover);
        }

    /* Container Styles */
    .page-container {
        min-height: 100vh;
        padding: 2rem;
        background: var(--bg-secondary);
        color: var(--text-primary);
    }

    .details-container {
        max-width: 1200px;
        margin: 0 auto;
        background: var(--bg-primary);
        border-radius: 1rem;
        box-shadow: 0 4px 6px -1px var(--shadow-color);
        overflow: hidden;
    }

    /* Header Styles */
    .details-header {
        padding: 2rem;
        background: linear-gradient(135deg, var(--header-gradient-from), var(--header-gradient-to));
        color: white;
    }

    .header-content {
        display: flex;
        align-items: center;
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .company-badge {
        width: 4rem;
        height: 4rem;
        background: var(--company-badge-bg);
        border-radius: 1rem;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
    }

    .company-info {
        flex: 1;
    }

    .company-name {
        font-size: 1.75rem;
        font-weight: 600;
        margin: 0 0 0.5rem;
    }

    .company-meta {
        display: flex;
        gap: 1rem;
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        opacity: 0.9;
    }

    .header-actions {
        display: flex;
        gap: 1rem;
    }

    /* Grid Layout */
    .details-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        padding: 2rem;
    }

    /* Card Styles */
    .details-card {
        background: var(--bg-primary);
        border-radius: 1rem;
        border: 1px solid var(--border-color);
        overflow: hidden;
    }

    .card-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1.5rem;
        background: var(--bg-secondary);
        border-bottom: 1px solid var(--border-color);
    }

        .card-header i {
            font-size: 1.25rem;
            color: var(--input-focus);
        }

        .card-header h2 {
            font-size: 1.25rem;
            font-weight: 600;
            margin: 0;
            color: var(--text-primary);
        }

    .card-content {
        padding: 1.5rem;
    }

    /* Information Groups */
    .info-group {
        margin-bottom: 1.5rem;
    }

        .info-group:last-child {
            margin-bottom: 0;
        }

        .info-group label {
            display: block;
            font-size: 0.875rem;
            color: var(--text-secondary);
            margin-bottom: 0.5rem;
        }

        .info-group span {
            display: block;
            color: var(--text-primary);
            font-weight: 500;
        }

    .not-provided {
        color: var(--text-secondary);
        font-style: italic;
    }

    /* Links */
    .contact-link, .map-link {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--input-focus);
        text-decoration: none;
        transition: color 0.2s;
    }

        .contact-link:hover, .map-link:hover {
            color: var(--header-gradient-from);
        }

    .map-link {
        margin-top: 1.5rem;
        padding: 0.75rem;
        background: var(--bg-secondary);
        border-radius: 0.5rem;
        width: 100%;
        justify-content: center;
    }

    /* Address Grid */
    .address-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
    }


    
</style>