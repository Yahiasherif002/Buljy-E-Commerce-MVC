@model ShoppingCart
@{
    ViewData["Title"] = "Details";
}

<div class="container py-5">
    <!-- Breadcrumb Navigation -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Home</a></li>
            <li class="breadcrumb-item"><a asp-action="Store" asp-controller="Home">Store</a></li>
            <li class="breadcrumb-item">
                <a asp-action="Category" asp-controller="Home" asp-route-id="@Model.product.CategoryId">
                    @Model.product.Category?.Name
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">@Model.product.Title</li>
        </ol>
    </nav>

    <!-- Product Details Form -->
    <form method="post" asp-antiforgery="true">
        <input type="hidden" asp-for="@Model.ProductId" />

        <div class="card border-0 shadow-sm">
            <div class="row g-0">
                <!-- Product Image Section -->
                <div class="col-md-5 p-0">
                    <div class="product-image-container">
                        <img src="@(string.IsNullOrEmpty(Model.product.ImageUrl) ? "/images/no-image.png" : Model.product.ImageUrl)"
                             class="product-detail-image"
                             alt="@Model.product.Title">
                        @if (Model.product.ListPrice > Model.product.Price100)
                        {
                            <div class="discount-badge-large">
                                <span>-@(((Model.product.ListPrice - Model.product.Price100) / Model.product.ListPrice * 100).ToString("0"))%</span>
                            </div>
                        }
                    </div>
                </div>

                <!-- Product Information Section -->
                <div class="col-md-7 p-0">
                    <div class="card-body p-4 p-lg-5">
                        <!-- Title and Category Section -->
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div>
                                <h1 class="product-title mb-2">@Model.product.Title</h1>
                                <p class="text-muted mb-2">by <span class="author-name">@Model.product.Author</span></p>
                                <div class="category-badge">
                                    <i class="bi bi-bookmark-fill me-1"></i>
                                    @Model.product.Category?.Name
                                </div>
                            </div>
                            <button type="button" class="wishlist-btn-large" onclick="addToWishlist()">
                                <i class="bi bi-heart"></i>
                            </button>
                        </div>

                        <!-- Price Section -->
                        <div class="price-section mb-4">
                            <div class="d-flex align-items-center gap-3">
                                <span class="current-price-large">@Model.product.Price.ToString("c")</span>
                                @if (Model.product.ListPrice > Model.product.Price)
                                {
                                    <span class="original-price-large">@Model.product.ListPrice.ToString("c")</span>
                                }
                            </div>
                            @if (Model.product.ListPrice > Model.product.Price)
                            {
                                <div class="savings-text">
                                    You save: @((Model.product.ListPrice - Model.product.Price).ToString("c"))
                                    (@(((Model.product.ListPrice - Model.product.Price) / Model.product.ListPrice * 100).ToString("0"))%)
                                </div>
                            }

                            <!-- Price Tiers Section -->
                            <div class="price-tiers mt-3">
                                <h3 class="tier-title">Bulk Pricing Available</h3>
                                <div class="tier-grid">
                                    <div class="tier-item">
                                        <div class="tier-quantity">1-49 units</div>
                                        <div class="tier-price">@Model.product.Price.ToString("c")</div>
                                        <div class="tier-savings">
                                            @if (Model.product.ListPrice > Model.product.Price)
                                            {
                                                <span>Save @(((Model.product.ListPrice - Model.product.Price) / Model.product.ListPrice * 100).ToString("0"))%</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="tier-item">
                                        <div class="tier-quantity">50-99 units</div>
                                        <div class="tier-price">@Model.product.Price50.ToString("c")</div>
                                        <div class="tier-savings">
                                            @if (Model.product.ListPrice > Model.product.Price50)
                                            {
                                                <span>Save @(((Model.product.ListPrice - Model.product.Price50) / Model.product.ListPrice * 100).ToString("0"))%</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="tier-item highlight">
                                        <div class="tier-quantity">100+ units</div>
                                        <div class="tier-price">@Model.product.Price100.ToString("c")</div>
                                        <div class="tier-savings">
                                            @if (Model.product.ListPrice > Model.product.Price100)
                                            {
                                                <span>Save @(((Model.product.ListPrice - Model.product.Price100) / Model.product.ListPrice * 100).ToString("0"))%</span>
                                            }
                                        </div>
                                        <div class="best-value-badge">Best Value</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Description Section -->
                        <div class="description-section mb-4">
                            <h2 class="section-title h5 mb-3">Description</h2>
                            <div class="description-text">@Html.Raw(Model.product.Description)</div>
                        </div>


                        <!-- Quantity Section -->
                        <div class="quantity-section mb-4">
                            <h2 class="section-title h5 mb-3">Quantity</h2>
                            <div class="d-flex align-items-center gap-3">
                                <div class="quantity-control">
                                    <button type="button" class="quantity-btn" onclick="decrementQuantity()">
                                        <i class="bi bi-dash"></i>
                                    </button>
                                    <input asp-for="Quantity" type="number" id="quantity" class="quantity-input" value="1" min="1" max="99">
                                    <button type="button" class="quantity-btn" onclick="incrementQuantity()">
                                        <i class="bi bi-plus"></i>
                                    </button>
                                </div>
                                <span class="stock-status in-stock">
                                    <i class="bi bi-check-circle-fill me-1"></i>In Stock
                                </span>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="action-buttons">
                            <button type="submit" class="btn btn-primary btn-lg add-to-cart-btn-large">
                                <i class="bi bi-cart-plus me-2"></i>Add to Cart
                            </button>
                            <button type="submit" formaction="@Url.Action("BuyNow", "Cart")" class="btn btn-outline-primary btn-lg buy-now-btn">
                                <i class="bi bi-lightning-fill me-2"></i>Buy Now
                            </button>
                        </div>

                        <!-- Features Section -->
                        <div class="feature-section mt-4">
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <div class="feature-item-small">
                                        <i class="bi bi-truck"></i>
                                        <div>
                                            <h3>Free Delivery</h3>
                                            <p>On orders over $50</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="feature-item-small">
                                        <i class="bi bi-arrow-counterclockwise"></i>
                                        <div>
                                            <h3>Easy Returns</h3>
                                            <p>30-day returns policy</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="feature-item-small">
                                        <i class="bi bi-shield-check"></i>
                                        <div>
                                            <h3>Secure Payment</h3>
                                            <p>100% secure checkout</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="feature-item-small">
                                        <i class="bi bi-headset"></i>
                                        <div>
                                            <h3>24/7 Support</h3>
                                            <p>Always here to help</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<style>


    .price-tiers {
        background-color: var(--bg-secondary);
        border-radius: 0.75rem;
        padding: 1.5rem;
        margin-top: 1.5rem;
    }

    .tier-title {
        font-size: 1rem;
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 1rem;
    }

    .tier-grid {
        display: grid;
        gap: 1rem;
        grid-template-columns: repeat(3, 1fr);
    }

    .tier-item {
        position: relative;
        background-color: var(--bg-primary);
        border: 1px solid var(--border-color);
        border-radius: 0.5rem;
        padding: 1rem;
        text-align: center;
        transition: var(--transition);
    }

        .tier-item:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-sm);
        }

        .tier-item.highlight {
            border: 2px solid var(--primary-color);
            background-color: var(--primary-color-light);
        }

    .tier-quantity {
        font-size: 0.875rem;
        color: var(--text-secondary);
        margin-bottom: 0.5rem;
    }

    .tier-price {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 0.5rem;
    }

    .tier-savings {
        font-size: 0.875rem;
        color: var(--success-color);
        font-weight: 500;
    }

    .best-value-badge {
        position: absolute;
        top: -0.75rem;
        left: 50%;
        transform: translateX(-50%);
        background-color: var(--primary-color);
        color: white;
        font-size: 0.75rem;
        font-weight: 600;
        padding: 0.25rem 0.75rem;
        border-radius: 1rem;
    }

    /* Container and Layout */
    .container {
        max-width: 1280px;
        margin: 0 auto;
    }

    /* Breadcrumb Navigation */
    .breadcrumb {
        display: flex;
        flex-wrap: wrap;
        padding: 0;
        margin: 0;
        list-style: none;
        gap: 0.5rem;
    }

    .breadcrumb-item {
        display: flex;
        align-items: center;
        color: var(--text-secondary);
    }

        .breadcrumb-item + .breadcrumb-item::before {
            content: "/";
            padding: 0 0.5rem;
            color: var(--text-secondary);
        }

    .breadcrumb a {
        color: var(--primary-color);
        text-decoration: none;
        transition: var(--transition);
    }

        .breadcrumb a:hover {
            color: var(--primary-hover);
        }

    /* Product Card */
    .card {
        background-color: var(--bg-primary);
        border-radius: 1rem;
        box-shadow: var(--shadow-md);
        transition: var(--transition);
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1);
        }

    /* Product Image */
    .product-image-container {
        position: relative;
        height: 100%;
        min-height: 400px;
        background-color: var(--bg-secondary);
        border-radius: 1rem 0 0 1rem;
        overflow: hidden;
    }

    .product-detail-image {
        width: 100%;
        height: 100%;
        object-fit: fill;
        transition: var(--transition);
    }

        .product-detail-image:hover {
            transform: scale(1.05);
        }

    /* Discount Badge */
    .discount-badge-large {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background-color: var(--danger-color);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 9999px;
        font-weight: 600;
        animation: pulse 2s infinite;
    }

    /* Product Info */
    .product-title {
        color: var(--text-primary);
        font-size: 2rem;
        font-weight: 700;
        line-height: 1.2;
        margin-bottom: 0.5rem;
    }

    .author-name {
        color: var(--primary-color);
        font-weight: 500;
    }

    .category-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        background-color: var(--bg-secondary);
        color: var(--text-secondary);
        padding: 0.5rem 1rem;
        border-radius: 9999px;
        font-size: 0.875rem;
    }

    /* Price Section */
    .price-section {
        margin: 2rem 0;
    }

    .current-price-large {
        font-size: 2.25rem;
        font-weight: 700;
        color: var(--text-primary);
    }

    .original-price-large {
        font-size: 1.5rem;
        text-decoration: line-through;
        color: var(--text-secondary);
    }

    .savings-text {
        color: var(--success-color);
        font-weight: 500;
        margin-top: 0.5rem;
    }

    /* Quantity Controls */
    .quantity-control {
        display: flex;
        align-items: center;
        border: 1px solid var(--border-color);
        border-radius: 0.5rem;
        overflow: hidden;
    }

    .quantity-btn {
        padding: 0.5rem 1rem;
        background-color: var(--bg-secondary);
        border: none;
        color: var(--text-primary);
        cursor: pointer;
        transition: var(--transition);
    }

        .quantity-btn:hover {
            background-color: var(--border-color);
        }

    .quantity-input {
        width: 4rem;
        text-align: center;
        border: none;
        background: transparent;
        color: var(--text-primary);
        -moz-appearance: textfield;
    }

        .quantity-input::-webkit-outer-spin-button,
        .quantity-input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

    /* Stock Status */
    .stock-status {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 500;
    }

    .in-stock {
        color: var(--success-color);
    }

    /* Action Buttons */
    .action-buttons {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
        margin-top: 2rem;
    }

    .btn {
        padding: 1rem 2rem;
        border-radius: 0.5rem;
        font-weight: 600;
        transition: var(--transition);
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .btn-primary {
        background-color: var(--primary-color);
        color: white;
        border: none;
    }

        .btn-primary:hover {
            background-color: var(--primary-hover);
        }

    .btn-outline-primary {
        background-color: transparent;
        border: 2px solid var(--primary-color);
        color: var(--primary-color);
    }

        .btn-outline-primary:hover {
            background-color: var(--primary-color);
            color: white;
        }

    /* Features Section */
    .features-section {
        margin-top: 2rem;
    }

    .feature-item-small {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        padding: 1.5rem;
        background-color: var(--bg-secondary);
        border-radius: 0.75rem;
        transition: var(--transition);
    }

        .feature-item-small:hover {
            transform: translateY(-2px);
        }

        .feature-item-small i {
            font-size: 1.5rem;
            color: var(--primary-color);
        }

        .feature-item-small h3 {
            color: var(--text-primary);
            font-size: 1rem;
            font-weight: 600;
            margin: 0 0 0.25rem 0;
        }

        .feature-item-small p {
            color: var(--text-secondary);
            font-size: 0.875rem;
            margin: 0;
        }

    /* Wishlist Button */
    .wishlist-btn-large {
        padding: 0.5rem;
        border: none;
        background: transparent;
        border-radius: 9999px;
        cursor: pointer;
        transition: var(--transition);
    }

        .wishlist-btn-large i {
            font-size: 1.5rem;
            color: var(--text-secondary);
            transition: var(--transition);
        }

        .wishlist-btn-large:hover i {
            color: var(--danger-color);
            transform: scale(1.1);
        }

</style>

@section Scripts {
    <script>
        function incrementQuantity() {
            const quantityInput = document.getElementById('quantity');
            let currentValue = parseInt(quantityInput.value) || 1;
            quantityInput.value = Math.min(currentValue + 1, 99); // Ensure max of 99
        }


        function decrementQuantity() {
            const quantityInput = document.getElementById('quantity');
            let currentValue = parseInt(quantityInput.value) || 1;
            quantityInput.value = Math.max(currentValue - 1, 1); // Ensure min of 1
        }
            function addToWishlist() {
            alert('Wishlist functionality not yet implemented.');
        }

    </script>
}